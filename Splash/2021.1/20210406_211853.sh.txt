#!/bin/bash

project_name="RetroCRT"
release_codename="Dark Odyssey"
release_version="v3.0"
project_url="https://github.com/xovox/RetroCRT"
author="XOVOX"

fade_duration=3

output_width="640"
output_height="480"
fps="30"

artwork="Assets/Arcade.png"
audio="Assets/MBR After Burner.m4a"
audio_seek="1:59"
intro_video="Assets/Rounded Neon Green and Blue lines Background.mp4"

mbr_gif="Assets/MBR.gif"

logo_primary="#39FF14"
logo_secondary="#00FFFD"
logo_secondary="#0000CD"
outro_video="Assets/Lightning Background.mp4"

gridvid01="/home/pi/RetroPie/media/arcade/video/joust-video.mp4"
gridvid02="/home/pi/RetroPie/media/arcade/video/rampage-video.mp4"
gridvid03="/home/pi/RetroPie/media/arcade/video/mvsc-video.mp4"
gridvid04="/home/pi/RetroPie/media/arcade/video/rygar-video.mp4"
gridvid05="/home/pi/RetroPie/media/arcade/video/rthunder-video.mp4"
gridvid06="/home/pi/RetroPie/media/arcade/video/goldnaxe-video.mp4"
gridvid07="/home/pi/RetroPie/media/arcade/video/ddragon-video.mp4"
gridvid08="/home/pi/RetroPie/media/arcade/video/sailormn-video.mp4"
gridvid09="/home/pi/RetroPie/media/arcade/video/aburner-video.mp4"
gridvid10="/home/pi/RetroPie/media/arcade/video/1944-video.mp4"
gridvid11="/home/pi/RetroPie/media/arcade/video/outrun-video.mp4"
gridvid12="/home/pi/RetroPie/media/arcade/video/mario-video.mp4"
gridvid13="/home/pi/RetroPie/media/arcade/video/pbobble2-video.mp4"
gridvid14="/home/pi/RetroPie/media/arcade/video/shinobi-video.mp4"
gridvid15="/home/pi/RetroPie/media/arcade/video/simpsons-video.mp4"
gridvid16="/home/pi/RetroPie/media/arcade/video/tapper-video.mp4"

if [ ! "$1" ]; then
	exit
fi

vid_length=$1
logo_text="$project_name"
subtext_text="$release_codename"
bottom_text="$project_name $release_version (c) $(date +%Y) $author
$project_url"

vidmath() {
	bc <<< "scale=2 ;$@" | sed 's/^\./0./'
}


output_date="../output/$(date +%Y%m%d_%H%M%S)"
logo_image="$output_date.logo.png"
subtext_image="$output_date.subtext.png"
bottom_image="$output_date.bottom.png"

#convert $artwork -scale x$[ ($output_height / 3) * 2 ]  $output_date.artwork.png
convert $artwork -resize x$(vidmath "($output_height / 3) * 5") -crop 640x480+0+0 $output_date.artwork.png
#cp $artwork $output_date.artwork.png

cp "$0" "$output_date".sh.txt

convert \
	-size 2000x2000 \
	xc:transparent \
	-font Lazer84 \
	-fill "$logo_secondary" \
	-pointsize 200 \
	-gravity center \
	-annotate +0+0 "$logo_text" \
	-fill "$logo_primary" \
	-pointsize 195 \
	-gravity center \
	-annotate +0+0 "$logo_text" \
	-trim \
	-scale 620x \
	+repage \
		"$logo_image"

convert \
	-size 2000x2000 \
	xc:transparent \
	-font Lazer84 \
	-fill "$logo_primary" \
	-pointsize 200 \
	-gravity center \
	-annotate +0+0 "$subtext_text" \
	-fill "$logo_secondary" \
	-pointsize 195 \
	-gravity center \
	-annotate +0+0 "$subtext_text" \
	-trim \
	-scale 480x \
	+repage \
		"$subtext_image"

convert \
	-size 10000x50 \
	xc:transparent \
	-font spleen-8x16 \
	-fill "$logo_primary" \
	-pointsize 16 \
	-gravity center \
	-annotate +0+0 "$bottom_text" \
	-trim \
	+repage \
	-scale 200% \
	"$bottom_image"

convert \
                -size 10000x50 \
                xc:transparent \
                -font spleen-8x16 \
                -fill "white" \
                -pointsize 16 \
                -gravity center \
                -annotate +0+0 "Insert Coin(s)" \
                -trim \
                +repage \
                        "$output_date.coin1.png"
                #-scale x20 \

convert \
                -size 10000x50 \
                xc:transparent \
                -font spleen-8x16 \
                -fill "gray" \
                -pointsize 16 \
                -gravity center \
                -annotate +0+0 "Insert Coin(s)" \
                -trim \
                +repage \
                        "$output_date.coin2.png"
                #-scale x20 \

convert \
	-delay 50 \
	$output_date.coin1.png \
	$output_date.coin2.png \
	-scale 200% \
	$output_date.coin.gif

eval "$(identify -format "artwork_width=%w\nartwork_height=%h\n" "$artwork")"
eval $(ffprobe -loglevel quiet -i "$intro_video" -show_entries stream=width,height -of default=nw=1 | sed 's/^/genvid_/')

width_new="$(vidmath "($genvid_height / 3) * 4")"
width_crop="$(vidmath "($genvid_width - $width_new) / 2")"
genvid_crop=$width_new:$genvid_height:$width_crop:0

eval "$(identify -format "logo_width=%w\nlogo_height=%h\n" "$logo_image")"
eval "$(identify -format "subtext_width=%w\nsubtext_height=%h\n" "$subtext_image")"
eval "$(identify -format "coin_width=%w\ncoin_height=%h\n" "$output_date.coin.gif")"
eval "$(identify -format "bottom_width=%w\nbottom_height=%h\n" "$bottom_image")"
eval "$(identify -format "mbr_width=%w\nmbr_height=%h\n" "$mbr_gif" | sort | uniq)"

mbr_voffset="$(vidmath "(($output_height / 10) * 2) - (( $mbr_height / 10) * 2 )")"
mbr_hoffset="$(vidmath "($output_width / 2) - ($mbr_width / 2)")"

logo_voffset="$(vidmath "(($output_height / 10) * 2) - (( $logo_height / 10) * 2 )")"
logo_hoffset="$(vidmath "($output_width / 2) - ($logo_width / 2)")"

#subtext_voffset=$[ (($output_height / 2) - ($subtext_height / 2)) + $logo_height ]
subtext_voffset="$(vidmath "$logo_voffset + $logo_height + ($subtext_height / 4)")"
subtext_hoffset="$(vidmath "($output_width / 2) - ($subtext_width / 2)")"

coin_voffset="$(vidmath "$subtext_voffset + $subtext_height + ($coin_height * 2)")"
coin_hoffset="$(vidmath "($output_width / 2) - ($coin_width / 2)")"

#bottom_hoffset="$(vidmath "output_width - $bottom_width - 20")"
bottom_voffset="$(vidmath "$output_height - $bottom_height - 20")"
bottom_hoffset="$(vidmath "($output_width / 2) - ($bottom_width / 2)")"

end_fadeout_start="$(vidmath "$vid_length - $fade_duration")"

grid_fade_in="$(vidmath "($vid_length / 100)	* 25")"
text_fade_in="$(vidmath "($vid_length / 100)	* 50")"
text_fade_out="$(vidmath "($vid_length / 100)	* 75")"

#grid_fade_in=$(printf %.2f "$((10**3	* $vid_length/100 * 25))e-3")
#text_fade_in=$(printf %.2f "$((10**3	* $vid_length/100 * 50))e-3")
#text_fade_out=$(printf %.2f "$((10**3	* $vid_length/100 * 75))e-3")

#grid_fade_in=$(bc <<< "scale=2 ;  ($vid_length / 100)	* 25")
#text_fade_in=$(bc <<< "scale=2 ;  ($vid_length / 100)	* 50")
#text_fade_out=$(bc <<< "scale=2 ; ($vid_length / 100)	* 75")

bg_fade_out=$text_fade_in
bg_fade_out_duration=3

arcade_alpha="0.95"
logo_alpha="0.85"

glow_filter="frei0r=glow:0.5"
tv_filters=",colorchannelmixer=aa=0.5,"
# should swap crop with scale

filter_complex="
	[0]	volume=0.15,afade=t=in:st=0:d=$fade_duration,afade=t=out:st=$end_fadeout_start:d=$fade_duration		[audio];

	[1:v]	scale=-2:$output_height,	crop=$output_width:$output_height:0:0,	eq=brightness=0.06:saturation=2,	frei0r=glow:0.5	[introvid];
	[2:v]	fade=out:st=$text_fade_in:d=$fade_duration,format=argb,geq=r='r(X,Y)':a='$arcade_alpha*alpha(X,Y)	'	[intropic];

	[3:v]	fade=in:st=$text_fade_in:d=$fade_duration,	fade=out:st=$text_fade_out:d=$fade_duration,	format=argb,	geq=r='r(X,Y)':a='$logo_alpha*alpha(X,Y)'	[logo];
	[4:v]	fade=in:st=$text_fade_in:d=$fade_duration,	fade=out:st=$text_fade_out:d=$fade_duration,	format=argb,	geq=r='r(X,Y)':a='$logo_alpha*alpha(X,Y)'	[subtext];
	[5:v]	fade=in:st=$text_fade_in:d=$fade_duration,							format=argb,	geq=r='r(X,Y)':a='$logo_alpha*alpha(X,Y)'	[bottom];
	[6:v]	fade=in:st=$text_fade_in:d=$fade_duration,	fade=out:st=$text_fade_out:d=$fade_duration,	format=argb,	geq=r='r(X,Y)':a='$logo_alpha*alpha(X,Y)'	[coins];
"

	export grid_fade_mark=0
	for tvscreen in {7..22} ; do
		grid_fade_mark="$(vidmath "$grid_fade_mark + .25")"
		filter_complex+="	[${tvscreen}:v]	setpts=PTS-STARTPTS,	scale=160x120,	vignette,	format=gbrp,	lenscorrection=k1=0.2:k2=0.2,	fade=in:st=$grid_fade_mark:d=$fade_duration,		format=argb	[tv${tvscreen}];
"
	done

filter_complex+="

	[23:v]	crop=1440:1080:240:0,	scale=$output_width:$output_height,	eq=contrast=3:brightness=0.00:saturation=1, fps=5	[outrovid];

	[24:v]	fade=in:st=$text_fade_out:d=$fade_duration,	format=argb,	geq=r='r(X,Y)':a='$logo_alpha*alpha(X,Y)'	[mbr];

	[introvid][intropic]	overlay		[introoverlay];

	[introoverlay][tv22]	overlay=x=160:y=360	[otv22];
	[otv22][tv21]		overlay=x=320:y=360	[otv21];
	[otv21][tv20]		overlay=x=480:y=240	[otv20];
	[otv20][tv19]		overlay=x=480:y=0	[otv19];
	[otv19][tv18]		overlay=x=0:y=120	[otv18];
	[otv18][tv17]		overlay=x=0:y=240	[otv17];
	[otv17][tv16]		overlay=x=320:y=240	[otv16];
	[otv16][tv15]		overlay=x=160:y=240	[otv15];
	[otv15][tv14]		overlay=x=320:y=0	[otv14];
	[otv14][tv13]		overlay=x=160:y=120	[otv13];
	[otv13][tv12]		overlay=x=0:y=0		[otv12];
	[otv12][tv11]		overlay=x=480:y=360	[otv11];
	[otv11][tv10]		overlay=x=0:y=360	[otv10];
	[otv10][tv9]		overlay=x=480:y=120	[otv9];
	[otv9][tv8]		overlay=x=160:y=0	[otv8];
	[otv8][tv7]		overlay=x=320:y=120	[tvoverlay];

	[tvoverlay]	fade=in:st=0:d=3,	fade=out:st=$bg_fade_out:d=$bg_fade_out_duration	[endintro];

	[endintro][outrovid]		overlay=enable='between(t,$(vidmath "$bg_fade_out + 4"),100)'	[outrovidoverlay];
	[outrovidoverlay][logo]		overlay=$logo_hoffset:$logo_voffset			[logooverlay];
	[logooverlay][subtext]		overlay=$subtext_hoffset:$subtext_voffset		[subtextoverlay];
	[subtextoverlay][coins]		overlay=$coin_hoffset:$coin_voffset			[coinoverlay];
	[coinoverlay][bottom]		overlay=$bottom_hoffset:$bottom_voffset			[bottomoverlay];
	[bottomoverlay][mbr]		overlay=$mbr_hoffset:$mbr_voffset			[endassets];

	[endassets]			fade=out:st=$end_fadeout_start:d=$fade_duration,format=yuv420p,fps=${fps}	[video]
		"

echo "$filter_complex" | tee $output_date.filter.txt

rm filter.txt
ln -s $output_date.filter.txt filter.txt

rm ffmpeg.sh
ln -s $output_date.ffmpeg.sh ffmpeg.sh 

cat << FFMPEGCLI | tee $output_date.ffmpeg.sh | bash
ffmpeg \
	-ss "$audio_seek" \
	-i "$audio" \
	-i "$intro_video" \
	-loop 1 \
	-i "$output_date.artwork.png" \
	-loop 1 \
	-i "$logo_image" \
	-loop 1 \
	-i "$subtext_image" \
	-loop 1 \
	-i "$bottom_image" \
	-ignore_loop 0 \
		-i "$output_date.coin.gif" \
	-i "$gridvid01" \
	-i "$gridvid02" \
	-i "$gridvid03" \
	-i "$gridvid04" \
	-i "$gridvid05" \
	-i "$gridvid06" \
	-i "$gridvid07" \
	-i "$gridvid08" \
	-i "$gridvid09" \
	-i "$gridvid10" \
	-i "$gridvid11" \
	-i "$gridvid12" \
	-i "$gridvid13" \
	-i "$gridvid14" \
	-i "$gridvid15" \
	-i "$gridvid16" \
	-i "$outro_video" \
	-ignore_loop 0 \
		-i "$mbr_gif" \
	-map_metadata 1 \
	-filter_complex \
		"
		$filter_complex
		" \
	-profile:v high \
	-crf 15 \
	-c:v libx264 \
	-b:a 256k \
	-map [video] \
	-map [audio] \
	-t $vid_length \
	-preset veryfast \
		$output_date.$vid_length.mp4\
	&& 
ffprobe $output_date.$vid_length.mp4 && {
	rm latest.$vid_length.mp4

	ln -s $output_date.$vid_length.mp4 latest.$vid_length.mp4

	rsync -avL --progress latest.$vid_length.mp4 hs1:RetroPie/splashscreens/
	ssh -t hs1 sudo cp -v RetroPie/splashscreens/latest.$vid_length.mp4 /etc/
	ssh hs1 omxplayer RetroPie/splashscreens/latest.$vid_length.mp4 & disown
}
FFMPEGCLI
exit
